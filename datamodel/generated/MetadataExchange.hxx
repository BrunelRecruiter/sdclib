// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef METADATA_EXCHANGE_HXX
#define METADATA_EXCHANGE_HXX

#include "MetadataExchange-fwd.hxx"

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/config.hxx>

#if (XSD_INT_VERSION != 4000000L)
#error XSD runtime version mismatch
#endif

#include <xsd/cxx/pre.hxx>

#include <memory>    // ::std::unique_ptr
#include <limits>    // std::numeric_limits
#include <algorithm> // std::binary_search
#include <utility>   // std::move

#include <xsd/cxx/xml/char-utf8.hxx>

#include <xsd/cxx/tree/exceptions.hxx>
#include <xsd/cxx/tree/elements.hxx>
#include <xsd/cxx/tree/containers.hxx>
#include <xsd/cxx/tree/list.hxx>

#include <xsd/cxx/xml/dom/parsing-header.hxx>

#include "wsdd-dpws-1.1-schema-os.hxx"

#include "MDPWS.hxx"

namespace WS
{
  namespace MEX
  {
    class GetMetadata: public ::xml_schema::Type
    {
      public:
      // Dialect
      //
      typedef ::xml_schema::Uri DialectType;
      typedef ::xsd::cxx::tree::optional< DialectType > DialectOptional;
      typedef ::xsd::cxx::tree::traits< DialectType, char > DialectTraits;

      const DialectOptional&
      Dialect () const;

      DialectOptional&
      Dialect ();

      void
      Dialect (const DialectType& x);

      void
      Dialect (const DialectOptional& x);

      void
      Dialect (::std::unique_ptr< DialectType > p);

      // Identifier
      //
      typedef ::xml_schema::Uri IdentifierType;
      typedef ::xsd::cxx::tree::optional< IdentifierType > IdentifierOptional;
      typedef ::xsd::cxx::tree::traits< IdentifierType, char > IdentifierTraits;

      const IdentifierOptional&
      Identifier () const;

      IdentifierOptional&
      Identifier ();

      void
      Identifier (const IdentifierType& x);

      void
      Identifier (const IdentifierOptional& x);

      void
      Identifier (::std::unique_ptr< IdentifierType > p);

      // Constructors.
      //
      GetMetadata ();

      GetMetadata (const ::xercesc::DOMElement& e,
                   ::xml_schema::Flags f = 0,
                   ::xml_schema::Container* c = 0);

      GetMetadata (const GetMetadata& x,
                   ::xml_schema::Flags f = 0,
                   ::xml_schema::Container* c = 0);

      virtual GetMetadata*
      _clone (::xml_schema::Flags f = 0,
              ::xml_schema::Container* c = 0) const;

      GetMetadata&
      operator= (const GetMetadata& x);

      virtual 
      ~GetMetadata ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::Flags);

      protected:
      DialectOptional Dialect_;
      IdentifierOptional Identifier_;
    };

    class Metadata: public ::xml_schema::Type
    {
      public:
      // MetadataSection
      //
      typedef ::WS::MEX::MetadataSection MetadataSectionType;
      typedef ::xsd::cxx::tree::sequence< MetadataSectionType > MetadataSectionSequence;
      typedef MetadataSectionSequence::iterator MetadataSectionIterator;
      typedef MetadataSectionSequence::const_iterator MetadataSectionConstIterator;
      typedef ::xsd::cxx::tree::traits< MetadataSectionType, char > MetadataSectionTraits;

      const MetadataSectionSequence&
      MetadataSection () const;

      MetadataSectionSequence&
      MetadataSection ();

      void
      MetadataSection (const MetadataSectionSequence& s);

      // Constructors.
      //
      Metadata ();

      Metadata (const ::xercesc::DOMElement& e,
                ::xml_schema::Flags f = 0,
                ::xml_schema::Container* c = 0);

      Metadata (const Metadata& x,
                ::xml_schema::Flags f = 0,
                ::xml_schema::Container* c = 0);

      virtual Metadata*
      _clone (::xml_schema::Flags f = 0,
              ::xml_schema::Container* c = 0) const;

      Metadata&
      operator= (const Metadata& x);

      virtual 
      ~Metadata ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::Flags);

      protected:
      MetadataSectionSequence MetadataSection_;
    };

    class MetadataSection: public ::xml_schema::Type
    {
      public:
      // MetadataReference
      //
      typedef ::WS::MEX::MetadataReference MetadataReferenceType;
      typedef ::xsd::cxx::tree::optional< MetadataReferenceType > MetadataReferenceOptional;
      typedef ::xsd::cxx::tree::traits< MetadataReferenceType, char > MetadataReferenceTraits;

      const MetadataReferenceOptional&
      MetadataReference () const;

      MetadataReferenceOptional&
      MetadataReference ();

      void
      MetadataReference (const MetadataReferenceType& x);

      void
      MetadataReference (const MetadataReferenceOptional& x);

      void
      MetadataReference (::std::unique_ptr< MetadataReferenceType > p);

      // Location
      //
      typedef ::xml_schema::Uri LocationType;
      typedef ::xsd::cxx::tree::optional< LocationType > LocationOptional;
      typedef ::xsd::cxx::tree::traits< LocationType, char > LocationTraits;

      const LocationOptional&
      Location () const;

      LocationOptional&
      Location ();

      void
      Location (const LocationType& x);

      void
      Location (const LocationOptional& x);

      void
      Location (::std::unique_ptr< LocationType > p);

      // ThisModel
      //
      typedef ::WS::DPWS::ThisModelType ThisModelType;
      typedef ::xsd::cxx::tree::optional< ThisModelType > ThisModelOptional;
      typedef ::xsd::cxx::tree::traits< ThisModelType, char > ThisModelTraits;

      const ThisModelOptional&
      ThisModel () const;

      ThisModelOptional&
      ThisModel ();

      void
      ThisModel (const ThisModelType& x);

      void
      ThisModel (const ThisModelOptional& x);

      void
      ThisModel (::std::unique_ptr< ThisModelType > p);

      // ThisDevice
      //
      typedef ::WS::DPWS::ThisDeviceType ThisDeviceType;
      typedef ::xsd::cxx::tree::optional< ThisDeviceType > ThisDeviceOptional;
      typedef ::xsd::cxx::tree::traits< ThisDeviceType, char > ThisDeviceTraits;

      const ThisDeviceOptional&
      ThisDevice () const;

      ThisDeviceOptional&
      ThisDevice ();

      void
      ThisDevice (const ThisDeviceType& x);

      void
      ThisDevice (const ThisDeviceOptional& x);

      void
      ThisDevice (::std::unique_ptr< ThisDeviceType > p);

      // Relationship
      //
      typedef ::WS::DPWS::Relationship RelationshipType;
      typedef ::xsd::cxx::tree::optional< RelationshipType > RelationshipOptional;
      typedef ::xsd::cxx::tree::traits< RelationshipType, char > RelationshipTraits;

      const RelationshipOptional&
      Relationship () const;

      RelationshipOptional&
      Relationship ();

      void
      Relationship (const RelationshipType& x);

      void
      Relationship (const RelationshipOptional& x);

      void
      Relationship (::std::unique_ptr< RelationshipType > p);

      // StreamDescriptions
      //
      typedef ::MDPWS::StreamDescriptionsType StreamDescriptionsType;
      typedef ::xsd::cxx::tree::optional< StreamDescriptionsType > StreamDescriptionsOptional;
      typedef ::xsd::cxx::tree::traits< StreamDescriptionsType, char > StreamDescriptionsTraits;

      const StreamDescriptionsOptional&
      StreamDescriptions () const;

      StreamDescriptionsOptional&
      StreamDescriptions ();

      void
      StreamDescriptions (const StreamDescriptionsType& x);

      void
      StreamDescriptions (const StreamDescriptionsOptional& x);

      void
      StreamDescriptions (::std::unique_ptr< StreamDescriptionsType > p);

      // Dialect
      //
      typedef ::xml_schema::Uri DialectType;
      typedef ::xsd::cxx::tree::traits< DialectType, char > DialectTraits;

      const DialectType&
      Dialect () const;

      DialectType&
      Dialect ();

      void
      Dialect (const DialectType& x);

      void
      Dialect (::std::unique_ptr< DialectType > p);

      // Identifier
      //
      typedef ::xml_schema::Uri IdentifierType;
      typedef ::xsd::cxx::tree::optional< IdentifierType > IdentifierOptional;
      typedef ::xsd::cxx::tree::traits< IdentifierType, char > IdentifierTraits;

      const IdentifierOptional&
      Identifier () const;

      IdentifierOptional&
      Identifier ();

      void
      Identifier (const IdentifierType& x);

      void
      Identifier (const IdentifierOptional& x);

      void
      Identifier (::std::unique_ptr< IdentifierType > p);

      // Constructors.
      //
      MetadataSection (const DialectType&);

      MetadataSection (const ::xercesc::DOMElement& e,
                       ::xml_schema::Flags f = 0,
                       ::xml_schema::Container* c = 0);

      MetadataSection (const MetadataSection& x,
                       ::xml_schema::Flags f = 0,
                       ::xml_schema::Container* c = 0);

      virtual MetadataSection*
      _clone (::xml_schema::Flags f = 0,
              ::xml_schema::Container* c = 0) const;

      MetadataSection&
      operator= (const MetadataSection& x);

      virtual 
      ~MetadataSection ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::Flags);

      protected:
      MetadataReferenceOptional MetadataReference_;
      LocationOptional Location_;
      ThisModelOptional ThisModel_;
      ThisDeviceOptional ThisDevice_;
      RelationshipOptional Relationship_;
      StreamDescriptionsOptional StreamDescriptions_;
      ::xsd::cxx::tree::one< DialectType > Dialect_;
      IdentifierOptional Identifier_;
    };

    class MetadataReference: public ::xml_schema::Type
    {
      public:
      // Constructors.
      //
      MetadataReference ();

      MetadataReference (const ::xercesc::DOMElement& e,
                         ::xml_schema::Flags f = 0,
                         ::xml_schema::Container* c = 0);

      MetadataReference (const MetadataReference& x,
                         ::xml_schema::Flags f = 0,
                         ::xml_schema::Container* c = 0);

      virtual MetadataReference*
      _clone (::xml_schema::Flags f = 0,
              ::xml_schema::Container* c = 0) const;

      virtual 
      ~MetadataReference ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::Flags);

      protected:
    };
  }
}

#include <iosfwd>

#include <xercesc/sax/InputSource.hpp>
#include <xercesc/dom/DOMDocument.hpp>
#include <xercesc/dom/DOMErrorHandler.hpp>

namespace WS
{
  namespace MEX
  {
    // Parse a URI or a local file.
    //

    ::std::unique_ptr< ::WS::MEX::GetMetadata >
    GetMetadata_ (const ::std::string& uri,
                  ::xml_schema::Flags f = 0,
                  const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::GetMetadata >
    GetMetadata_ (const ::std::string& uri,
                  ::xml_schema::ErrorHandler& eh,
                  ::xml_schema::Flags f = 0,
                  const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::GetMetadata >
    GetMetadata_ (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::Flags f = 0,
                  const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse std::istream.
    //

    ::std::unique_ptr< ::WS::MEX::GetMetadata >
    GetMetadata_ (::std::istream& is,
                  ::xml_schema::Flags f = 0,
                  const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::GetMetadata >
    GetMetadata_ (::std::istream& is,
                  ::xml_schema::ErrorHandler& eh,
                  ::xml_schema::Flags f = 0,
                  const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::GetMetadata >
    GetMetadata_ (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::Flags f = 0,
                  const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::GetMetadata >
    GetMetadata_ (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::Flags f = 0,
                  const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::GetMetadata >
    GetMetadata_ (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::ErrorHandler& eh,
                  ::xml_schema::Flags f = 0,
                  const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::GetMetadata >
    GetMetadata_ (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::Flags f = 0,
                  const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse xercesc::InputSource.
    //

    ::std::unique_ptr< ::WS::MEX::GetMetadata >
    GetMetadata_ (::xercesc::InputSource& is,
                  ::xml_schema::Flags f = 0,
                  const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::GetMetadata >
    GetMetadata_ (::xercesc::InputSource& is,
                  ::xml_schema::ErrorHandler& eh,
                  ::xml_schema::Flags f = 0,
                  const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::GetMetadata >
    GetMetadata_ (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::Flags f = 0,
                  const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::unique_ptr< ::WS::MEX::GetMetadata >
    GetMetadata_ (const ::xercesc::DOMDocument& d,
                  ::xml_schema::Flags f = 0,
                  const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::GetMetadata >
    GetMetadata_ (::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d,
                  ::xml_schema::Flags f = 0,
                  const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse a URI or a local file.
    //

    ::std::unique_ptr< ::xml_schema::Uri >
    Dialect (const ::std::string& uri,
             ::xml_schema::Flags f = 0,
             const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Dialect (const ::std::string& uri,
             ::xml_schema::ErrorHandler& eh,
             ::xml_schema::Flags f = 0,
             const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Dialect (const ::std::string& uri,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::Flags f = 0,
             const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse std::istream.
    //

    ::std::unique_ptr< ::xml_schema::Uri >
    Dialect (::std::istream& is,
             ::xml_schema::Flags f = 0,
             const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Dialect (::std::istream& is,
             ::xml_schema::ErrorHandler& eh,
             ::xml_schema::Flags f = 0,
             const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Dialect (::std::istream& is,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::Flags f = 0,
             const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Dialect (::std::istream& is,
             const ::std::string& id,
             ::xml_schema::Flags f = 0,
             const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Dialect (::std::istream& is,
             const ::std::string& id,
             ::xml_schema::ErrorHandler& eh,
             ::xml_schema::Flags f = 0,
             const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Dialect (::std::istream& is,
             const ::std::string& id,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::Flags f = 0,
             const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse xercesc::InputSource.
    //

    ::std::unique_ptr< ::xml_schema::Uri >
    Dialect (::xercesc::InputSource& is,
             ::xml_schema::Flags f = 0,
             const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Dialect (::xercesc::InputSource& is,
             ::xml_schema::ErrorHandler& eh,
             ::xml_schema::Flags f = 0,
             const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Dialect (::xercesc::InputSource& is,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::Flags f = 0,
             const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::unique_ptr< ::xml_schema::Uri >
    Dialect (const ::xercesc::DOMDocument& d,
             ::xml_schema::Flags f = 0,
             const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Dialect (::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d,
             ::xml_schema::Flags f = 0,
             const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse a URI or a local file.
    //

    ::std::unique_ptr< ::xml_schema::Uri >
    Identifier (const ::std::string& uri,
                ::xml_schema::Flags f = 0,
                const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Identifier (const ::std::string& uri,
                ::xml_schema::ErrorHandler& eh,
                ::xml_schema::Flags f = 0,
                const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Identifier (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::Flags f = 0,
                const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse std::istream.
    //

    ::std::unique_ptr< ::xml_schema::Uri >
    Identifier (::std::istream& is,
                ::xml_schema::Flags f = 0,
                const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Identifier (::std::istream& is,
                ::xml_schema::ErrorHandler& eh,
                ::xml_schema::Flags f = 0,
                const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Identifier (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::Flags f = 0,
                const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Identifier (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::Flags f = 0,
                const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Identifier (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::ErrorHandler& eh,
                ::xml_schema::Flags f = 0,
                const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Identifier (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::Flags f = 0,
                const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse xercesc::InputSource.
    //

    ::std::unique_ptr< ::xml_schema::Uri >
    Identifier (::xercesc::InputSource& is,
                ::xml_schema::Flags f = 0,
                const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Identifier (::xercesc::InputSource& is,
                ::xml_schema::ErrorHandler& eh,
                ::xml_schema::Flags f = 0,
                const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Identifier (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::Flags f = 0,
                const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::unique_ptr< ::xml_schema::Uri >
    Identifier (const ::xercesc::DOMDocument& d,
                ::xml_schema::Flags f = 0,
                const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Identifier (::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d,
                ::xml_schema::Flags f = 0,
                const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse a URI or a local file.
    //

    ::std::unique_ptr< ::WS::MEX::Metadata >
    Metadata_ (const ::std::string& uri,
               ::xml_schema::Flags f = 0,
               const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::Metadata >
    Metadata_ (const ::std::string& uri,
               ::xml_schema::ErrorHandler& eh,
               ::xml_schema::Flags f = 0,
               const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::Metadata >
    Metadata_ (const ::std::string& uri,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::Flags f = 0,
               const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse std::istream.
    //

    ::std::unique_ptr< ::WS::MEX::Metadata >
    Metadata_ (::std::istream& is,
               ::xml_schema::Flags f = 0,
               const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::Metadata >
    Metadata_ (::std::istream& is,
               ::xml_schema::ErrorHandler& eh,
               ::xml_schema::Flags f = 0,
               const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::Metadata >
    Metadata_ (::std::istream& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::Flags f = 0,
               const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::Metadata >
    Metadata_ (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::Flags f = 0,
               const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::Metadata >
    Metadata_ (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::ErrorHandler& eh,
               ::xml_schema::Flags f = 0,
               const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::Metadata >
    Metadata_ (::std::istream& is,
               const ::std::string& id,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::Flags f = 0,
               const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse xercesc::InputSource.
    //

    ::std::unique_ptr< ::WS::MEX::Metadata >
    Metadata_ (::xercesc::InputSource& is,
               ::xml_schema::Flags f = 0,
               const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::Metadata >
    Metadata_ (::xercesc::InputSource& is,
               ::xml_schema::ErrorHandler& eh,
               ::xml_schema::Flags f = 0,
               const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::Metadata >
    Metadata_ (::xercesc::InputSource& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::Flags f = 0,
               const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::unique_ptr< ::WS::MEX::Metadata >
    Metadata_ (const ::xercesc::DOMDocument& d,
               ::xml_schema::Flags f = 0,
               const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::Metadata >
    Metadata_ (::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d,
               ::xml_schema::Flags f = 0,
               const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse a URI or a local file.
    //

    ::std::unique_ptr< ::WS::MEX::MetadataSection >
    MetadataSection_ (const ::std::string& uri,
                      ::xml_schema::Flags f = 0,
                      const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataSection >
    MetadataSection_ (const ::std::string& uri,
                      ::xml_schema::ErrorHandler& eh,
                      ::xml_schema::Flags f = 0,
                      const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataSection >
    MetadataSection_ (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::Flags f = 0,
                      const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse std::istream.
    //

    ::std::unique_ptr< ::WS::MEX::MetadataSection >
    MetadataSection_ (::std::istream& is,
                      ::xml_schema::Flags f = 0,
                      const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataSection >
    MetadataSection_ (::std::istream& is,
                      ::xml_schema::ErrorHandler& eh,
                      ::xml_schema::Flags f = 0,
                      const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataSection >
    MetadataSection_ (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::Flags f = 0,
                      const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataSection >
    MetadataSection_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::Flags f = 0,
                      const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataSection >
    MetadataSection_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::ErrorHandler& eh,
                      ::xml_schema::Flags f = 0,
                      const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataSection >
    MetadataSection_ (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::Flags f = 0,
                      const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse xercesc::InputSource.
    //

    ::std::unique_ptr< ::WS::MEX::MetadataSection >
    MetadataSection_ (::xercesc::InputSource& is,
                      ::xml_schema::Flags f = 0,
                      const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataSection >
    MetadataSection_ (::xercesc::InputSource& is,
                      ::xml_schema::ErrorHandler& eh,
                      ::xml_schema::Flags f = 0,
                      const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataSection >
    MetadataSection_ (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::Flags f = 0,
                      const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::unique_ptr< ::WS::MEX::MetadataSection >
    MetadataSection_ (const ::xercesc::DOMDocument& d,
                      ::xml_schema::Flags f = 0,
                      const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataSection >
    MetadataSection_ (::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d,
                      ::xml_schema::Flags f = 0,
                      const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse a URI or a local file.
    //

    ::std::unique_ptr< ::WS::MEX::MetadataReference >
    MetadataReference_ (const ::std::string& uri,
                        ::xml_schema::Flags f = 0,
                        const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataReference >
    MetadataReference_ (const ::std::string& uri,
                        ::xml_schema::ErrorHandler& eh,
                        ::xml_schema::Flags f = 0,
                        const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataReference >
    MetadataReference_ (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::Flags f = 0,
                        const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse std::istream.
    //

    ::std::unique_ptr< ::WS::MEX::MetadataReference >
    MetadataReference_ (::std::istream& is,
                        ::xml_schema::Flags f = 0,
                        const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataReference >
    MetadataReference_ (::std::istream& is,
                        ::xml_schema::ErrorHandler& eh,
                        ::xml_schema::Flags f = 0,
                        const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataReference >
    MetadataReference_ (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::Flags f = 0,
                        const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataReference >
    MetadataReference_ (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::Flags f = 0,
                        const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataReference >
    MetadataReference_ (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::ErrorHandler& eh,
                        ::xml_schema::Flags f = 0,
                        const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataReference >
    MetadataReference_ (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::Flags f = 0,
                        const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse xercesc::InputSource.
    //

    ::std::unique_ptr< ::WS::MEX::MetadataReference >
    MetadataReference_ (::xercesc::InputSource& is,
                        ::xml_schema::Flags f = 0,
                        const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataReference >
    MetadataReference_ (::xercesc::InputSource& is,
                        ::xml_schema::ErrorHandler& eh,
                        ::xml_schema::Flags f = 0,
                        const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataReference >
    MetadataReference_ (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::Flags f = 0,
                        const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::unique_ptr< ::WS::MEX::MetadataReference >
    MetadataReference_ (const ::xercesc::DOMDocument& d,
                        ::xml_schema::Flags f = 0,
                        const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::WS::MEX::MetadataReference >
    MetadataReference_ (::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d,
                        ::xml_schema::Flags f = 0,
                        const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse a URI or a local file.
    //

    ::std::unique_ptr< ::xml_schema::Uri >
    Location (const ::std::string& uri,
              ::xml_schema::Flags f = 0,
              const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Location (const ::std::string& uri,
              ::xml_schema::ErrorHandler& eh,
              ::xml_schema::Flags f = 0,
              const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Location (const ::std::string& uri,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::Flags f = 0,
              const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse std::istream.
    //

    ::std::unique_ptr< ::xml_schema::Uri >
    Location (::std::istream& is,
              ::xml_schema::Flags f = 0,
              const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Location (::std::istream& is,
              ::xml_schema::ErrorHandler& eh,
              ::xml_schema::Flags f = 0,
              const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Location (::std::istream& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::Flags f = 0,
              const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Location (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::Flags f = 0,
              const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Location (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::ErrorHandler& eh,
              ::xml_schema::Flags f = 0,
              const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Location (::std::istream& is,
              const ::std::string& id,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::Flags f = 0,
              const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse xercesc::InputSource.
    //

    ::std::unique_ptr< ::xml_schema::Uri >
    Location (::xercesc::InputSource& is,
              ::xml_schema::Flags f = 0,
              const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Location (::xercesc::InputSource& is,
              ::xml_schema::ErrorHandler& eh,
              ::xml_schema::Flags f = 0,
              const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Location (::xercesc::InputSource& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::Flags f = 0,
              const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::unique_ptr< ::xml_schema::Uri >
    Location (const ::xercesc::DOMDocument& d,
              ::xml_schema::Flags f = 0,
              const ::xml_schema::Properties& p = ::xml_schema::Properties ());

    ::std::unique_ptr< ::xml_schema::Uri >
    Location (::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d,
              ::xml_schema::Flags f = 0,
              const ::xml_schema::Properties& p = ::xml_schema::Properties ());
  }
}

#include <iosfwd>

#include <xercesc/dom/DOMDocument.hpp>
#include <xercesc/dom/DOMErrorHandler.hpp>
#include <xercesc/framework/XMLFormatter.hpp>

#include <xsd/cxx/xml/dom/auto-ptr.hxx>

namespace WS
{
  namespace MEX
  {
    // Serialize to std::ostream.
    //

    void
    GetMetadata_ (::std::ostream& os,
                  const ::WS::MEX::GetMetadata& x, 
                  const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::Flags f = 0);

    void
    GetMetadata_ (::std::ostream& os,
                  const ::WS::MEX::GetMetadata& x, 
                  ::xml_schema::ErrorHandler& eh,
                  const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::Flags f = 0);

    void
    GetMetadata_ (::std::ostream& os,
                  const ::WS::MEX::GetMetadata& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::Flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    GetMetadata_ (::xercesc::XMLFormatTarget& ft,
                  const ::WS::MEX::GetMetadata& x, 
                  const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::Flags f = 0);

    void
    GetMetadata_ (::xercesc::XMLFormatTarget& ft,
                  const ::WS::MEX::GetMetadata& x, 
                  ::xml_schema::ErrorHandler& eh,
                  const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::Flags f = 0);

    void
    GetMetadata_ (::xercesc::XMLFormatTarget& ft,
                  const ::WS::MEX::GetMetadata& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::Flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    GetMetadata_ (::xercesc::DOMDocument& d,
                  const ::WS::MEX::GetMetadata& x,
                  ::xml_schema::Flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument >
    GetMetadata_ (const ::WS::MEX::GetMetadata& x, 
                  const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                  ::xml_schema::Flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Dialect (::std::ostream& os,
             const ::xml_schema::Uri& x, 
             const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::Flags f = 0);

    void
    Dialect (::std::ostream& os,
             const ::xml_schema::Uri& x, 
             ::xml_schema::ErrorHandler& eh,
             const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::Flags f = 0);

    void
    Dialect (::std::ostream& os,
             const ::xml_schema::Uri& x, 
             ::xercesc::DOMErrorHandler& eh,
             const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::Flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Dialect (::xercesc::XMLFormatTarget& ft,
             const ::xml_schema::Uri& x, 
             const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::Flags f = 0);

    void
    Dialect (::xercesc::XMLFormatTarget& ft,
             const ::xml_schema::Uri& x, 
             ::xml_schema::ErrorHandler& eh,
             const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::Flags f = 0);

    void
    Dialect (::xercesc::XMLFormatTarget& ft,
             const ::xml_schema::Uri& x, 
             ::xercesc::DOMErrorHandler& eh,
             const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::Flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Dialect (::xercesc::DOMDocument& d,
             const ::xml_schema::Uri& x,
             ::xml_schema::Flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument >
    Dialect (const ::xml_schema::Uri& x, 
             const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
             ::xml_schema::Flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Identifier (::std::ostream& os,
                const ::xml_schema::Uri& x, 
                const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::Flags f = 0);

    void
    Identifier (::std::ostream& os,
                const ::xml_schema::Uri& x, 
                ::xml_schema::ErrorHandler& eh,
                const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::Flags f = 0);

    void
    Identifier (::std::ostream& os,
                const ::xml_schema::Uri& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::Flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Identifier (::xercesc::XMLFormatTarget& ft,
                const ::xml_schema::Uri& x, 
                const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::Flags f = 0);

    void
    Identifier (::xercesc::XMLFormatTarget& ft,
                const ::xml_schema::Uri& x, 
                ::xml_schema::ErrorHandler& eh,
                const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::Flags f = 0);

    void
    Identifier (::xercesc::XMLFormatTarget& ft,
                const ::xml_schema::Uri& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::Flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Identifier (::xercesc::DOMDocument& d,
                const ::xml_schema::Uri& x,
                ::xml_schema::Flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument >
    Identifier (const ::xml_schema::Uri& x, 
                const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                ::xml_schema::Flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Metadata_ (::std::ostream& os,
               const ::WS::MEX::Metadata& x, 
               const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::Flags f = 0);

    void
    Metadata_ (::std::ostream& os,
               const ::WS::MEX::Metadata& x, 
               ::xml_schema::ErrorHandler& eh,
               const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::Flags f = 0);

    void
    Metadata_ (::std::ostream& os,
               const ::WS::MEX::Metadata& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::Flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Metadata_ (::xercesc::XMLFormatTarget& ft,
               const ::WS::MEX::Metadata& x, 
               const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::Flags f = 0);

    void
    Metadata_ (::xercesc::XMLFormatTarget& ft,
               const ::WS::MEX::Metadata& x, 
               ::xml_schema::ErrorHandler& eh,
               const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::Flags f = 0);

    void
    Metadata_ (::xercesc::XMLFormatTarget& ft,
               const ::WS::MEX::Metadata& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::Flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Metadata_ (::xercesc::DOMDocument& d,
               const ::WS::MEX::Metadata& x,
               ::xml_schema::Flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument >
    Metadata_ (const ::WS::MEX::Metadata& x, 
               const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
               ::xml_schema::Flags f = 0);

    // Serialize to std::ostream.
    //

    void
    MetadataSection_ (::std::ostream& os,
                      const ::WS::MEX::MetadataSection& x, 
                      const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::Flags f = 0);

    void
    MetadataSection_ (::std::ostream& os,
                      const ::WS::MEX::MetadataSection& x, 
                      ::xml_schema::ErrorHandler& eh,
                      const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::Flags f = 0);

    void
    MetadataSection_ (::std::ostream& os,
                      const ::WS::MEX::MetadataSection& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::Flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    MetadataSection_ (::xercesc::XMLFormatTarget& ft,
                      const ::WS::MEX::MetadataSection& x, 
                      const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::Flags f = 0);

    void
    MetadataSection_ (::xercesc::XMLFormatTarget& ft,
                      const ::WS::MEX::MetadataSection& x, 
                      ::xml_schema::ErrorHandler& eh,
                      const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::Flags f = 0);

    void
    MetadataSection_ (::xercesc::XMLFormatTarget& ft,
                      const ::WS::MEX::MetadataSection& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::Flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    MetadataSection_ (::xercesc::DOMDocument& d,
                      const ::WS::MEX::MetadataSection& x,
                      ::xml_schema::Flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument >
    MetadataSection_ (const ::WS::MEX::MetadataSection& x, 
                      const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                      ::xml_schema::Flags f = 0);

    // Serialize to std::ostream.
    //

    void
    MetadataReference_ (::std::ostream& os,
                        const ::WS::MEX::MetadataReference& x, 
                        const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::Flags f = 0);

    void
    MetadataReference_ (::std::ostream& os,
                        const ::WS::MEX::MetadataReference& x, 
                        ::xml_schema::ErrorHandler& eh,
                        const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::Flags f = 0);

    void
    MetadataReference_ (::std::ostream& os,
                        const ::WS::MEX::MetadataReference& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::Flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    MetadataReference_ (::xercesc::XMLFormatTarget& ft,
                        const ::WS::MEX::MetadataReference& x, 
                        const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::Flags f = 0);

    void
    MetadataReference_ (::xercesc::XMLFormatTarget& ft,
                        const ::WS::MEX::MetadataReference& x, 
                        ::xml_schema::ErrorHandler& eh,
                        const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::Flags f = 0);

    void
    MetadataReference_ (::xercesc::XMLFormatTarget& ft,
                        const ::WS::MEX::MetadataReference& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::Flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    MetadataReference_ (::xercesc::DOMDocument& d,
                        const ::WS::MEX::MetadataReference& x,
                        ::xml_schema::Flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument >
    MetadataReference_ (const ::WS::MEX::MetadataReference& x, 
                        const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
                        ::xml_schema::Flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Location (::std::ostream& os,
              const ::xml_schema::Uri& x, 
              const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::Flags f = 0);

    void
    Location (::std::ostream& os,
              const ::xml_schema::Uri& x, 
              ::xml_schema::ErrorHandler& eh,
              const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::Flags f = 0);

    void
    Location (::std::ostream& os,
              const ::xml_schema::Uri& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::Flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Location (::xercesc::XMLFormatTarget& ft,
              const ::xml_schema::Uri& x, 
              const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::Flags f = 0);

    void
    Location (::xercesc::XMLFormatTarget& ft,
              const ::xml_schema::Uri& x, 
              ::xml_schema::ErrorHandler& eh,
              const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::Flags f = 0);

    void
    Location (::xercesc::XMLFormatTarget& ft,
              const ::xml_schema::Uri& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::Flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Location (::xercesc::DOMDocument& d,
              const ::xml_schema::Uri& x,
              ::xml_schema::Flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument >
    Location (const ::xml_schema::Uri& x, 
              const ::xml_schema::NamespaceInfomap& m = ::xml_schema::NamespaceInfomap (),
              ::xml_schema::Flags f = 0);

    void
    operator<< (::xercesc::DOMElement&, const GetMetadata&);

    void
    operator<< (::xercesc::DOMElement&, const Metadata&);

    void
    operator<< (::xercesc::DOMElement&, const MetadataSection&);

    void
    operator<< (::xercesc::DOMElement&, const MetadataReference&);
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

#endif // METADATA_EXCHANGE_HXX
