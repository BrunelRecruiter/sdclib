/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_OSCLib_WRAP_H_
#define SWIG_OSCLib_WRAP_H_

class SwigDirector_OSCPCachedProvider : public OSCLib::Data::OSCP::OSCPCachedProvider, public Swig::Director {

public:
    SwigDirector_OSCPCachedProvider();
    virtual ~SwigDirector_OSCPCachedProvider();
    void swig_connect_director();
    void swig_init_callbacks();
};

class SwigDirector_OSCPConsumerEventHandler : public OSCLib::Data::OSCP::OSCPConsumerEventHandler, public Swig::Director {

public:
    SwigDirector_OSCPConsumerEventHandler();
    virtual ~SwigDirector_OSCPConsumerEventHandler();
    virtual void onOperationInvoked(OSCLib::Data::OSCP::OperationInvocationContext const &oic, OSCLib::Data::OSCP::InvocationState is);
    virtual std::string getHandle();

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *, int);
    typedef char * (SWIGSTDCALL* SWIG_Callback1_t)();
    void swig_connect_director(SWIG_Callback0_t callbackonOperationInvoked, SWIG_Callback1_t callbackgetHandle);

private:
    SWIG_Callback0_t swig_callbackonOperationInvoked;
    SWIG_Callback1_t swig_callbackgetHandle;
    void swig_init_callbacks();
};

class SwigDirector_OSCPConsumerAlertConditionStateHandler : public OSCLib::Data::OSCP::OSCPConsumerAlertConditionStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPConsumerAlertConditionStateHandler();
    virtual ~SwigDirector_OSCPConsumerAlertConditionStateHandler();
    virtual void onOperationInvoked(OSCLib::Data::OSCP::OperationInvocationContext const &oic, OSCLib::Data::OSCP::InvocationState is);
    virtual std::string getHandle();
    virtual void onStateChanged(OSCLib::Data::OSCP::AlertConditionState const &state);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *, int);
    typedef char * (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackonOperationInvoked, SWIG_Callback1_t callbackgetHandle, SWIG_Callback2_t callbackonStateChanged);

private:
    SWIG_Callback0_t swig_callbackonOperationInvoked;
    SWIG_Callback1_t swig_callbackgetHandle;
    SWIG_Callback2_t swig_callbackonStateChanged;
    void swig_init_callbacks();
};

class SwigDirector_OSCPConsumerAlertSignalStateHandler : public OSCLib::Data::OSCP::OSCPConsumerAlertSignalStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPConsumerAlertSignalStateHandler();
    virtual ~SwigDirector_OSCPConsumerAlertSignalStateHandler();
    virtual void onOperationInvoked(OSCLib::Data::OSCP::OperationInvocationContext const &oic, OSCLib::Data::OSCP::InvocationState is);
    virtual std::string getHandle();
    virtual void onStateChanged(OSCLib::Data::OSCP::AlertSignalState const &state);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *, int);
    typedef char * (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackonOperationInvoked, SWIG_Callback1_t callbackgetHandle, SWIG_Callback2_t callbackonStateChanged);

private:
    SWIG_Callback0_t swig_callbackonOperationInvoked;
    SWIG_Callback1_t swig_callbackgetHandle;
    SWIG_Callback2_t swig_callbackonStateChanged;
    void swig_init_callbacks();
};

class SwigDirector_OSCPConsumerAlertSystemStateHandler : public OSCLib::Data::OSCP::OSCPConsumerAlertSystemStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPConsumerAlertSystemStateHandler();
    virtual ~SwigDirector_OSCPConsumerAlertSystemStateHandler();
    virtual void onOperationInvoked(OSCLib::Data::OSCP::OperationInvocationContext const &oic, OSCLib::Data::OSCP::InvocationState is);
    virtual std::string getHandle();
    virtual void onStateChanged(OSCLib::Data::OSCP::AlertSystemState const &state);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *, int);
    typedef char * (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackonOperationInvoked, SWIG_Callback1_t callbackgetHandle, SWIG_Callback2_t callbackonStateChanged);

private:
    SWIG_Callback0_t swig_callbackonOperationInvoked;
    SWIG_Callback1_t swig_callbackgetHandle;
    SWIG_Callback2_t swig_callbackonStateChanged;
    void swig_init_callbacks();
};

class SwigDirector_OSCPConsumerConnectionLostHandler : public OSCLib::Data::OSCP::OSCPConsumerConnectionLostHandler, public Swig::Director {

public:
    SwigDirector_OSCPConsumerConnectionLostHandler();
    virtual ~SwigDirector_OSCPConsumerConnectionLostHandler();
    virtual void onConnectionLost();

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)();
    void swig_connect_director(SWIG_Callback0_t callbackonConnectionLost);

private:
    SWIG_Callback0_t swig_callbackonConnectionLost;
    void swig_init_callbacks();
};

class SwigDirector_OSCPConsumerContextStateChangedHandler : public OSCLib::Data::OSCP::OSCPConsumerContextStateChangedHandler, public Swig::Director {

public:
    SwigDirector_OSCPConsumerContextStateChangedHandler();
    virtual ~SwigDirector_OSCPConsumerContextStateChangedHandler();
    virtual void onContextStateChanged(std::vector< std::string > const &handles);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackonContextStateChanged);

private:
    SWIG_Callback0_t swig_callbackonContextStateChanged;
    void swig_init_callbacks();
};

class SwigDirector_OSCPConsumerEnumStringMetricStateHandler : public OSCLib::Data::OSCP::OSCPConsumerEnumStringMetricStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPConsumerEnumStringMetricStateHandler();
    virtual ~SwigDirector_OSCPConsumerEnumStringMetricStateHandler();
    virtual void onOperationInvoked(OSCLib::Data::OSCP::OperationInvocationContext const &oic, OSCLib::Data::OSCP::InvocationState is);
    virtual std::string getHandle();
    virtual void onStateChanged(OSCLib::Data::OSCP::EnumStringMetricState const &state);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *, int);
    typedef char * (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackonOperationInvoked, SWIG_Callback1_t callbackgetHandle, SWIG_Callback2_t callbackonStateChanged);

private:
    SWIG_Callback0_t swig_callbackonOperationInvoked;
    SWIG_Callback1_t swig_callbackgetHandle;
    SWIG_Callback2_t swig_callbackonStateChanged;
    void swig_init_callbacks();
};

class SwigDirector_OSCPConsumerLimitAlertConditionStateHandler : public OSCLib::Data::OSCP::OSCPConsumerLimitAlertConditionStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPConsumerLimitAlertConditionStateHandler();
    virtual ~SwigDirector_OSCPConsumerLimitAlertConditionStateHandler();
    virtual void onOperationInvoked(OSCLib::Data::OSCP::OperationInvocationContext const &oic, OSCLib::Data::OSCP::InvocationState is);
    virtual std::string getHandle();
    virtual void onStateChanged(OSCLib::Data::OSCP::LimitAlertConditionState const &state);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *, int);
    typedef char * (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackonOperationInvoked, SWIG_Callback1_t callbackgetHandle, SWIG_Callback2_t callbackonStateChanged);

private:
    SWIG_Callback0_t swig_callbackonOperationInvoked;
    SWIG_Callback1_t swig_callbackgetHandle;
    SWIG_Callback2_t swig_callbackonStateChanged;
    void swig_init_callbacks();
};

class SwigDirector_OSCPConsumerNumericMetricStateHandler : public OSCLib::Data::OSCP::OSCPConsumerNumericMetricStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPConsumerNumericMetricStateHandler();
    virtual ~SwigDirector_OSCPConsumerNumericMetricStateHandler();
    virtual void onOperationInvoked(OSCLib::Data::OSCP::OperationInvocationContext const &oic, OSCLib::Data::OSCP::InvocationState is);
    virtual std::string getHandle();
    virtual void onStateChanged(OSCLib::Data::OSCP::NumericMetricState const &state);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *, int);
    typedef char * (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackonOperationInvoked, SWIG_Callback1_t callbackgetHandle, SWIG_Callback2_t callbackonStateChanged);

private:
    SWIG_Callback0_t swig_callbackonOperationInvoked;
    SWIG_Callback1_t swig_callbackgetHandle;
    SWIG_Callback2_t swig_callbackonStateChanged;
    void swig_init_callbacks();
};

class SwigDirector_OSCPConsumerRealTimeSampleArrayMetricStateHandler : public OSCLib::Data::OSCP::OSCPConsumerRealTimeSampleArrayMetricStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPConsumerRealTimeSampleArrayMetricStateHandler();
    virtual ~SwigDirector_OSCPConsumerRealTimeSampleArrayMetricStateHandler();
    virtual void onOperationInvoked(OSCLib::Data::OSCP::OperationInvocationContext const &oic, OSCLib::Data::OSCP::InvocationState is);
    virtual std::string getHandle();
    virtual void onStateChanged(OSCLib::Data::OSCP::RealTimeSampleArrayMetricState const &state);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *, int);
    typedef char * (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackonOperationInvoked, SWIG_Callback1_t callbackgetHandle, SWIG_Callback2_t callbackonStateChanged);

private:
    SWIG_Callback0_t swig_callbackonOperationInvoked;
    SWIG_Callback1_t swig_callbackgetHandle;
    SWIG_Callback2_t swig_callbackonStateChanged;
    void swig_init_callbacks();
};

class SwigDirector_OSCPConsumerStringMetricStateHandler : public OSCLib::Data::OSCP::OSCPConsumerStringMetricStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPConsumerStringMetricStateHandler();
    virtual ~SwigDirector_OSCPConsumerStringMetricStateHandler();
    virtual void onOperationInvoked(OSCLib::Data::OSCP::OperationInvocationContext const &oic, OSCLib::Data::OSCP::InvocationState is);
    virtual std::string getHandle();
    virtual void onStateChanged(OSCLib::Data::OSCP::StringMetricState const &state);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *, int);
    typedef char * (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackonOperationInvoked, SWIG_Callback1_t callbackgetHandle, SWIG_Callback2_t callbackonStateChanged);

private:
    SWIG_Callback0_t swig_callbackonOperationInvoked;
    SWIG_Callback1_t swig_callbackgetHandle;
    SWIG_Callback2_t swig_callbackonStateChanged;
    void swig_init_callbacks();
};

class SwigDirector_OSCPProviderMDStateHandler : public OSCLib::Data::OSCP::OSCPProviderMDStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPProviderMDStateHandler();
    virtual ~SwigDirector_OSCPProviderMDStateHandler();
    virtual std::string getHandle();

    typedef char * (SWIGSTDCALL* SWIG_Callback0_t)();
    void swig_connect_director(SWIG_Callback0_t callbackgetHandle);

private:
    SWIG_Callback0_t swig_callbackgetHandle;
    void swig_init_callbacks();
};

class SwigDirector_OSCPProviderActivateOperationHandler : public OSCLib::Data::OSCP::OSCPProviderActivateOperationHandler, public Swig::Director {

public:
    SwigDirector_OSCPProviderActivateOperationHandler();
    virtual ~SwigDirector_OSCPProviderActivateOperationHandler();
    virtual std::string getHandle();
    virtual OSCLib::Data::OSCP::InvocationState onActivateRequest(OSCLib::Data::OSCP::MDIBContainer const &mdib, OSCLib::Data::OSCP::OperationInvocationContext const &oic);

    typedef char * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef int (SWIGSTDCALL* SWIG_Callback1_t)(void *, void *);
    void swig_connect_director(SWIG_Callback0_t callbackgetHandle, SWIG_Callback1_t callbackonActivateRequest);

private:
    SWIG_Callback0_t swig_callbackgetHandle;
    SWIG_Callback1_t swig_callbackonActivateRequest;
    void swig_init_callbacks();
};

class SwigDirector_OSCPProviderAlertConditionStateHandler : public OSCLib::Data::OSCP::OSCPProviderAlertConditionStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPProviderAlertConditionStateHandler();
    virtual ~SwigDirector_OSCPProviderAlertConditionStateHandler();
    virtual std::string getHandle();
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequest(OSCLib::Data::OSCP::AlertConditionState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic);
    virtual void sourceHasChanged(std::string const &sourceHandle);
    virtual OSCLib::Data::OSCP::AlertConditionState getState();

    typedef char * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef int (SWIGSTDCALL* SWIG_Callback1_t)(void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(char *);
    typedef void * (SWIGSTDCALL* SWIG_Callback3_t)();
    void swig_connect_director(SWIG_Callback0_t callbackgetHandle, SWIG_Callback1_t callbackonStateChangeRequest, SWIG_Callback2_t callbacksourceHasChanged, SWIG_Callback3_t callbackgetState);

private:
    SWIG_Callback0_t swig_callbackgetHandle;
    SWIG_Callback1_t swig_callbackonStateChangeRequest;
    SWIG_Callback2_t swig_callbacksourceHasChanged;
    SWIG_Callback3_t swig_callbackgetState;
    void swig_init_callbacks();
};

class SwigDirector_OSCPProviderAlertSignalStateHandler : public OSCLib::Data::OSCP::OSCPProviderAlertSignalStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPProviderAlertSignalStateHandler();
    virtual ~SwigDirector_OSCPProviderAlertSignalStateHandler();
    virtual std::string getHandle();
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequest(OSCLib::Data::OSCP::AlertSignalState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic);
    virtual OSCLib::Data::OSCP::AlertSignalState getState();

    typedef char * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef int (SWIGSTDCALL* SWIG_Callback1_t)(void *, void *);
    typedef void * (SWIGSTDCALL* SWIG_Callback2_t)();
    void swig_connect_director(SWIG_Callback0_t callbackgetHandle, SWIG_Callback1_t callbackonStateChangeRequest, SWIG_Callback2_t callbackgetState);

private:
    SWIG_Callback0_t swig_callbackgetHandle;
    SWIG_Callback1_t swig_callbackonStateChangeRequest;
    SWIG_Callback2_t swig_callbackgetState;
    void swig_init_callbacks();
};

class SwigDirector_OSCPProviderAlertSystemStateHandler : public OSCLib::Data::OSCP::OSCPProviderAlertSystemStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPProviderAlertSystemStateHandler();
    virtual ~SwigDirector_OSCPProviderAlertSystemStateHandler();
    virtual std::string getHandle();
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequest(OSCLib::Data::OSCP::AlertSystemState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic);
    virtual OSCLib::Data::OSCP::AlertSystemState getState();

    typedef char * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef int (SWIGSTDCALL* SWIG_Callback1_t)(void *, void *);
    typedef void * (SWIGSTDCALL* SWIG_Callback2_t)();
    void swig_connect_director(SWIG_Callback0_t callbackgetHandle, SWIG_Callback1_t callbackonStateChangeRequest, SWIG_Callback2_t callbackgetState);

private:
    SWIG_Callback0_t swig_callbackgetHandle;
    SWIG_Callback1_t swig_callbackonStateChangeRequest;
    SWIG_Callback2_t swig_callbackgetState;
    void swig_init_callbacks();
};

class SwigDirector_OSCPProviderClockStateHandler : public OSCLib::Data::OSCP::OSCPProviderClockStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPProviderClockStateHandler();
    virtual ~SwigDirector_OSCPProviderClockStateHandler();
    virtual std::string getHandle();
    virtual OSCLib::Data::OSCP::ClockState getState();

    typedef char * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void * (SWIGSTDCALL* SWIG_Callback1_t)();
    void swig_connect_director(SWIG_Callback0_t callbackgetHandle, SWIG_Callback1_t callbackgetState);

private:
    SWIG_Callback0_t swig_callbackgetHandle;
    SWIG_Callback1_t swig_callbackgetState;
    void swig_init_callbacks();
};

class SwigDirector_OSCPProviderComponentStateHandler : public OSCLib::Data::OSCP::OSCPProviderComponentStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPProviderComponentStateHandler();
    virtual ~SwigDirector_OSCPProviderComponentStateHandler();
    virtual std::string getHandle();
    virtual OSCLib::Data::OSCP::ComponentState getState();

    typedef char * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void * (SWIGSTDCALL* SWIG_Callback1_t)();
    void swig_connect_director(SWIG_Callback0_t callbackgetHandle, SWIG_Callback1_t callbackgetState);

private:
    SWIG_Callback0_t swig_callbackgetHandle;
    SWIG_Callback1_t swig_callbackgetState;
    void swig_init_callbacks();
};

class SwigDirector_OSCPProviderContextStateHandler : public OSCLib::Data::OSCP::OSCPProviderContextStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPProviderContextStateHandler();
    virtual ~SwigDirector_OSCPProviderContextStateHandler();
    virtual std::string getHandle();
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequest(std::vector< OSCLib::Data::OSCP::EnsembleContextState > const &ecStates, std::vector< OSCLib::Data::OSCP::LocationContextState > const &lcStates, std::vector< OSCLib::Data::OSCP::OperatorContextState > const &ocStates, std::vector< OSCLib::Data::OSCP::PatientContextState > const &pcStates, std::vector< OSCLib::Data::OSCP::WorkflowContextState > const &wcStates, OSCLib::Data::OSCP::OperationInvocationContext const &oic);
    virtual std::vector< OSCLib::Data::OSCP::EnsembleContextState > getEnsembleContextStates();
    virtual std::vector< OSCLib::Data::OSCP::LocationContextState > getLocationContextStates();
    virtual std::vector< OSCLib::Data::OSCP::OperatorContextState > getOperatorContextStates();
    virtual std::vector< OSCLib::Data::OSCP::PatientContextState > getPatientContextStates();
    virtual std::vector< OSCLib::Data::OSCP::WorkflowContextState > getWorkflowContextStates();

    typedef char * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef int (SWIGSTDCALL* SWIG_Callback1_t)(void *, void *, void *, void *, void *, void *);
    typedef void * (SWIGSTDCALL* SWIG_Callback2_t)();
    typedef void * (SWIGSTDCALL* SWIG_Callback3_t)();
    typedef void * (SWIGSTDCALL* SWIG_Callback4_t)();
    typedef void * (SWIGSTDCALL* SWIG_Callback5_t)();
    typedef void * (SWIGSTDCALL* SWIG_Callback6_t)();
    void swig_connect_director(SWIG_Callback0_t callbackgetHandle, SWIG_Callback1_t callbackonStateChangeRequest, SWIG_Callback2_t callbackgetEnsembleContextStates, SWIG_Callback3_t callbackgetLocationContextStates, SWIG_Callback4_t callbackgetOperatorContextStates, SWIG_Callback5_t callbackgetPatientContextStates, SWIG_Callback6_t callbackgetWorkflowContextStates);

private:
    SWIG_Callback0_t swig_callbackgetHandle;
    SWIG_Callback1_t swig_callbackonStateChangeRequest;
    SWIG_Callback2_t swig_callbackgetEnsembleContextStates;
    SWIG_Callback3_t swig_callbackgetLocationContextStates;
    SWIG_Callback4_t swig_callbackgetOperatorContextStates;
    SWIG_Callback5_t swig_callbackgetPatientContextStates;
    SWIG_Callback6_t swig_callbackgetWorkflowContextStates;
    void swig_init_callbacks();
};

class SwigDirector_OSCPProviderEnumStringMetricStateHandler : public OSCLib::Data::OSCP::OSCPProviderEnumStringMetricStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPProviderEnumStringMetricStateHandler();
    virtual ~SwigDirector_OSCPProviderEnumStringMetricStateHandler();
    virtual std::string getHandle();
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequest(OSCLib::Data::OSCP::EnumStringMetricState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic);
    virtual OSCLib::Data::OSCP::EnumStringMetricState getState();

    typedef char * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef int (SWIGSTDCALL* SWIG_Callback1_t)(void *, void *);
    typedef void * (SWIGSTDCALL* SWIG_Callback2_t)();
    void swig_connect_director(SWIG_Callback0_t callbackgetHandle, SWIG_Callback1_t callbackonStateChangeRequest, SWIG_Callback2_t callbackgetState);

private:
    SWIG_Callback0_t swig_callbackgetHandle;
    SWIG_Callback1_t swig_callbackonStateChangeRequest;
    SWIG_Callback2_t swig_callbackgetState;
    void swig_init_callbacks();
};

class SwigDirector_OSCPProvider : public OSCLib::Data::OSCP::OSCPProvider, public Swig::Director {

public:
    SwigDirector_OSCPProvider();
    virtual ~SwigDirector_OSCPProvider();
    virtual OSCLib::Data::OSCP::MDIBContainer getMDIB();
    virtual OSCLib::Data::OSCP::MDDescription getMDDescription();
    virtual OSCLib::Data::OSCP::MDState getMDState();
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequest(OSCLib::Data::OSCP::EnumStringMetricState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic);
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequestSwigPublic(OSCLib::Data::OSCP::EnumStringMetricState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic) {
      return OSCLib::Data::OSCP::OSCPProvider::onStateChangeRequest(state,oic);
    }
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequest(OSCLib::Data::OSCP::NumericMetricState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic);
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequestSwigPublic(OSCLib::Data::OSCP::NumericMetricState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic) {
      return OSCLib::Data::OSCP::OSCPProvider::onStateChangeRequest(state,oic);
    }
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequest(OSCLib::Data::OSCP::StringMetricState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic);
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequestSwigPublic(OSCLib::Data::OSCP::StringMetricState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic) {
      return OSCLib::Data::OSCP::OSCPProvider::onStateChangeRequest(state,oic);
    }
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequest(OSCLib::Data::OSCP::RealTimeSampleArrayMetricState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic);
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequestSwigPublic(OSCLib::Data::OSCP::RealTimeSampleArrayMetricState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic) {
      return OSCLib::Data::OSCP::OSCPProvider::onStateChangeRequest(state,oic);
    }
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequest(OSCLib::Data::OSCP::AlertSystemState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic);
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequestSwigPublic(OSCLib::Data::OSCP::AlertSystemState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic) {
      return OSCLib::Data::OSCP::OSCPProvider::onStateChangeRequest(state,oic);
    }
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequest(OSCLib::Data::OSCP::AlertConditionState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic);
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequestSwigPublic(OSCLib::Data::OSCP::AlertConditionState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic) {
      return OSCLib::Data::OSCP::OSCPProvider::onStateChangeRequest(state,oic);
    }
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequest(OSCLib::Data::OSCP::AlertSignalState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic);
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequestSwigPublic(OSCLib::Data::OSCP::AlertSignalState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic) {
      return OSCLib::Data::OSCP::OSCPProvider::onStateChangeRequest(state,oic);
    }
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequest(OSCLib::Data::OSCP::LimitAlertConditionState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic);
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequestSwigPublic(OSCLib::Data::OSCP::LimitAlertConditionState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic) {
      return OSCLib::Data::OSCP::OSCPProvider::onStateChangeRequest(state,oic);
    }

    typedef void * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void * (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef void * (SWIGSTDCALL* SWIG_Callback2_t)();
    typedef int (SWIGSTDCALL* SWIG_Callback3_t)(void *, void *);
    typedef int (SWIGSTDCALL* SWIG_Callback4_t)(void *, void *);
    typedef int (SWIGSTDCALL* SWIG_Callback5_t)(void *, void *);
    typedef int (SWIGSTDCALL* SWIG_Callback6_t)(void *, void *);
    typedef int (SWIGSTDCALL* SWIG_Callback7_t)(void *, void *);
    typedef int (SWIGSTDCALL* SWIG_Callback8_t)(void *, void *);
    typedef int (SWIGSTDCALL* SWIG_Callback9_t)(void *, void *);
    typedef int (SWIGSTDCALL* SWIG_Callback10_t)(void *, void *);
    void swig_connect_director(SWIG_Callback0_t callbackgetMDIB, SWIG_Callback1_t callbackgetMDDescription, SWIG_Callback2_t callbackgetMDState, SWIG_Callback3_t callbackonStateChangeRequest__SWIG_0, SWIG_Callback4_t callbackonStateChangeRequest__SWIG_1, SWIG_Callback5_t callbackonStateChangeRequest__SWIG_2, SWIG_Callback6_t callbackonStateChangeRequest__SWIG_3, SWIG_Callback7_t callbackonStateChangeRequest__SWIG_4, SWIG_Callback8_t callbackonStateChangeRequest__SWIG_5, SWIG_Callback9_t callbackonStateChangeRequest__SWIG_6, SWIG_Callback10_t callbackonStateChangeRequest__SWIG_7);

private:
    SWIG_Callback0_t swig_callbackgetMDIB;
    SWIG_Callback1_t swig_callbackgetMDDescription;
    SWIG_Callback2_t swig_callbackgetMDState;
    SWIG_Callback3_t swig_callbackonStateChangeRequest__SWIG_0;
    SWIG_Callback4_t swig_callbackonStateChangeRequest__SWIG_1;
    SWIG_Callback5_t swig_callbackonStateChangeRequest__SWIG_2;
    SWIG_Callback6_t swig_callbackonStateChangeRequest__SWIG_3;
    SWIG_Callback7_t swig_callbackonStateChangeRequest__SWIG_4;
    SWIG_Callback8_t swig_callbackonStateChangeRequest__SWIG_5;
    SWIG_Callback9_t swig_callbackonStateChangeRequest__SWIG_6;
    SWIG_Callback10_t swig_callbackonStateChangeRequest__SWIG_7;
    void swig_init_callbacks();
};

class SwigDirector_OSCPProviderHydraMDSStateHandler : public OSCLib::Data::OSCP::OSCPProviderHydraMDSStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPProviderHydraMDSStateHandler();
    virtual ~SwigDirector_OSCPProviderHydraMDSStateHandler();
    virtual std::string getHandle();
    virtual OSCLib::Data::OSCP::HydraMDSState getState();

    typedef char * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void * (SWIGSTDCALL* SWIG_Callback1_t)();
    void swig_connect_director(SWIG_Callback0_t callbackgetHandle, SWIG_Callback1_t callbackgetState);

private:
    SWIG_Callback0_t swig_callbackgetHandle;
    SWIG_Callback1_t swig_callbackgetState;
    void swig_init_callbacks();
};

class SwigDirector_OSCPProviderLimitAlertConditionStateHandler : public OSCLib::Data::OSCP::OSCPProviderLimitAlertConditionStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPProviderLimitAlertConditionStateHandler();
    virtual ~SwigDirector_OSCPProviderLimitAlertConditionStateHandler();
    virtual std::string getHandle();
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequest(OSCLib::Data::OSCP::LimitAlertConditionState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic);
    virtual void sourceHasChanged(std::string const &sourceHandle);
    virtual OSCLib::Data::OSCP::LimitAlertConditionState getState();

    typedef char * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef int (SWIGSTDCALL* SWIG_Callback1_t)(void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(char *);
    typedef void * (SWIGSTDCALL* SWIG_Callback3_t)();
    void swig_connect_director(SWIG_Callback0_t callbackgetHandle, SWIG_Callback1_t callbackonStateChangeRequest, SWIG_Callback2_t callbacksourceHasChanged, SWIG_Callback3_t callbackgetState);

private:
    SWIG_Callback0_t swig_callbackgetHandle;
    SWIG_Callback1_t swig_callbackonStateChangeRequest;
    SWIG_Callback2_t swig_callbacksourceHasChanged;
    SWIG_Callback3_t swig_callbackgetState;
    void swig_init_callbacks();
};

class SwigDirector_OSCPProviderNumericMetricStateHandler : public OSCLib::Data::OSCP::OSCPProviderNumericMetricStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPProviderNumericMetricStateHandler();
    virtual ~SwigDirector_OSCPProviderNumericMetricStateHandler();
    virtual std::string getHandle();
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequest(OSCLib::Data::OSCP::NumericMetricState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic);
    virtual OSCLib::Data::OSCP::NumericMetricState getState();

    typedef char * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef int (SWIGSTDCALL* SWIG_Callback1_t)(void *, void *);
    typedef void * (SWIGSTDCALL* SWIG_Callback2_t)();
    void swig_connect_director(SWIG_Callback0_t callbackgetHandle, SWIG_Callback1_t callbackonStateChangeRequest, SWIG_Callback2_t callbackgetState);

private:
    SWIG_Callback0_t swig_callbackgetHandle;
    SWIG_Callback1_t swig_callbackonStateChangeRequest;
    SWIG_Callback2_t swig_callbackgetState;
    void swig_init_callbacks();
};

class SwigDirector_OSCPProviderRealTimeSampleArrayMetricStateHandler : public OSCLib::Data::OSCP::OSCPProviderRealTimeSampleArrayMetricStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPProviderRealTimeSampleArrayMetricStateHandler();
    virtual ~SwigDirector_OSCPProviderRealTimeSampleArrayMetricStateHandler();
    virtual std::string getHandle();
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequest(OSCLib::Data::OSCP::RealTimeSampleArrayMetricState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic);
    virtual OSCLib::Data::OSCP::RealTimeSampleArrayMetricState getState();

    typedef char * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef int (SWIGSTDCALL* SWIG_Callback1_t)(void *, void *);
    typedef void * (SWIGSTDCALL* SWIG_Callback2_t)();
    void swig_connect_director(SWIG_Callback0_t callbackgetHandle, SWIG_Callback1_t callbackonStateChangeRequest, SWIG_Callback2_t callbackgetState);

private:
    SWIG_Callback0_t swig_callbackgetHandle;
    SWIG_Callback1_t swig_callbackonStateChangeRequest;
    SWIG_Callback2_t swig_callbackgetState;
    void swig_init_callbacks();
};

class SwigDirector_OSCPProviderStringMetricStateHandler : public OSCLib::Data::OSCP::OSCPProviderStringMetricStateHandler, public Swig::Director {

public:
    SwigDirector_OSCPProviderStringMetricStateHandler();
    virtual ~SwigDirector_OSCPProviderStringMetricStateHandler();
    virtual std::string getHandle();
    virtual OSCLib::Data::OSCP::InvocationState onStateChangeRequest(OSCLib::Data::OSCP::StringMetricState const &state, OSCLib::Data::OSCP::OperationInvocationContext const &oic);
    virtual OSCLib::Data::OSCP::StringMetricState getState();

    typedef char * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef int (SWIGSTDCALL* SWIG_Callback1_t)(void *, void *);
    typedef void * (SWIGSTDCALL* SWIG_Callback2_t)();
    void swig_connect_director(SWIG_Callback0_t callbackgetHandle, SWIG_Callback1_t callbackonStateChangeRequest, SWIG_Callback2_t callbackgetState);

private:
    SWIG_Callback0_t swig_callbackgetHandle;
    SWIG_Callback1_t swig_callbackonStateChangeRequest;
    SWIG_Callback2_t swig_callbackgetState;
    void swig_init_callbacks();
};

class SwigDirector_OSCPHelloReceivedHandler : public OSCLib::Data::OSCP::OSCPHelloReceivedHandler, public Swig::Director {

public:
    SwigDirector_OSCPHelloReceivedHandler();
    virtual ~SwigDirector_OSCPHelloReceivedHandler();
    virtual void helloReceived(std::string epr);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(char *);
    void swig_connect_director(SWIG_Callback0_t callbackhelloReceived);

private:
    SWIG_Callback0_t swig_callbackhelloReceived;
    void swig_init_callbacks();
};


#endif
